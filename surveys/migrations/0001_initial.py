# Generated by Django 5.1.1 on 2024-10-09 14:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("locations", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="DatasetII",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("month", models.PositiveSmallIntegerField(help_text="Mes de la data (1-12)")),
                ("year", models.PositiveIntegerField(help_text="Año de la data")),
                (
                    "provider_name",
                    models.CharField(help_text="Nombre del prestador de servicio", max_length=255),
                ),
                (
                    "provider_last_modified",
                    models.DateTimeField(help_text="Última fecha de modificación"),
                ),
                (
                    "has_operator",
                    models.BooleanField(default=False, help_text="Prestador de servicio tiene operador"),
                ),
                (
                    "incentive_payment_frequency",
                    models.CharField(
                        blank=True,
                        help_text="Frecuencia de pago de incentivo",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "average_operator_incentive",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Monto promedio del incentivo pagado al operador",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "registered_associates",
                    models.PositiveIntegerField(
                        blank=True, help_text="Número de asociados inscritos en padrón", null=True
                    ),
                ),
                (
                    "charges_family_fee",
                    models.BooleanField(default=False, help_text="Prestador cobra cuota familiar"),
                ),
                (
                    "family_fee_frequency",
                    models.CharField(
                        blank=True,
                        help_text="Frecuencia de la cuota familiar",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "average_family_fee",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Cuota familiar promedio",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "delinquent_associates",
                    models.PositiveIntegerField(
                        blank=True, help_text="Número de asociados morosos", null=True
                    ),
                ),
                (
                    "survey_module_completed",
                    models.BooleanField(default=False, help_text="Encuesta del módulo completada"),
                ),
                (
                    "has_residual_chlorine_register",
                    models.BooleanField(
                        default=False, help_text="Prestador tiene registro de cloro residual"
                    ),
                ),
                (
                    "population_center",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dataset_ii_records",
                        to="locations.populationcenter",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dataset II",
                "verbose_name_plural": "Datasets II",
                "ordering": ["-year", "-month"],
            },
        ),
        migrations.CreateModel(
            name="DatasetIII",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("month", models.PositiveSmallIntegerField(help_text="Mes de la data (1-12)")),
                ("year", models.PositiveIntegerField(help_text="Año de la data")),
                (
                    "system_last_modified",
                    models.DateTimeField(help_text="Última fecha de modificación"),
                ),
                (
                    "continuous_water_service",
                    models.BooleanField(default=False, help_text="Servicio de agua continuo 24 horas"),
                ),
                (
                    "has_chlorination_system",
                    models.BooleanField(default=False, help_text="Tiene sistema de cloración"),
                ),
                (
                    "chlorinates_water",
                    models.BooleanField(default=False, help_text="Realiza cloración del agua"),
                ),
                (
                    "served_population_with_connection",
                    models.PositiveIntegerField(
                        blank=True, help_text="Población atendida con conexión", null=True
                    ),
                ),
                (
                    "inhabited_houses_with_connection",
                    models.PositiveIntegerField(
                        blank=True, help_text="Viviendas habitadas con conexión", null=True
                    ),
                ),
                (
                    "water_system_type",
                    models.CharField(
                        blank=True, help_text="Tipo de sistema de agua", max_length=255, null=True
                    ),
                ),
                (
                    "operational_state_annual",
                    models.CharField(
                        blank=True,
                        help_text="Estado operativo anual de la línea de conducción",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "population_center",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dataset_iii_records",
                        to="locations.populationcenter",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dataset III",
                "verbose_name_plural": "Datasets III",
                "ordering": ["-year", "-month"],
            },
        ),
        migrations.CreateModel(
            name="DatasetI",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("month", models.PositiveSmallIntegerField(help_text="Mes de la data (1-12)")),
                ("year", models.PositiveIntegerField(help_text="Año de la data")),
                (
                    "survey_last_modified",
                    models.DateTimeField(help_text="Última fecha de modificación de la encuesta"),
                ),
                (
                    "total_population",
                    models.PositiveIntegerField(
                        blank=True, help_text="Población total del centro poblado", null=True
                    ),
                ),
                (
                    "inhabited_houses",
                    models.PositiveIntegerField(
                        blank=True, help_text="Número de viviendas habitadas", null=True
                    ),
                ),
                (
                    "has_water_system",
                    models.BooleanField(default=False, help_text="Tiene sistema de agua"),
                ),
                (
                    "population_with_water",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Número de personas con acceso al servicio de agua",
                        null=True,
                    ),
                ),
                (
                    "total_houses_with_connection",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Total viviendas con conexión al sistema de agua",
                        null=True,
                    ),
                ),
                (
                    "has_sanitation_system",
                    models.BooleanField(
                        default=False, help_text="Cuenta con sistema de disposición de excretas"
                    ),
                ),
                (
                    "survey_type",
                    models.CharField(blank=True, help_text="Tipo de encuesta", max_length=50, null=True),
                ),
                (
                    "survey_completed",
                    models.BooleanField(default=False, help_text="Encuesta completada"),
                ),
                (
                    "population_center",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dataset_i_records",
                        to="locations.populationcenter",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dataset I",
                "verbose_name_plural": "Datasets I",
                "ordering": ["-year", "-month"],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("month", "year", "population_center"), name="unique_dataset_i"
                    )
                ],
            },
        ),
    ]
